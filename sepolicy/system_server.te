#============= system_server ==============
allow system_server config_file:file r_file_perms;
allow system_server proc:file append;
allow system_server config_file:dir r_file_perms;
allow system_server asus_tee_device:chr_file r_file_perms;
allow system_server efs_file:dir r_dir_perms;
allow system_server efs_file:file r_file_perms;
allow system_server factory_file:dir r_dir_perms;
allow system_server factory_file:file r_file_perms;
allow system_server gps_data_file:fifo_file rw_file_perms;
allow system_server gps_data_file:dir search;
allow system_server radio_device:chr_file w_file_perms;

# This is evil but we cannot constrain it anymore than
# "any system_file" because the domain rules in external/sepolicy.
allow system_server system_file:file execmod;

#unix_socket_connect(system_server, sensorhubd, sensorhubd)

# Access /dev/mdm
allow system_server radio_device:chr_file r_file_perms;
allow system_server self:netlink_socket create_socket_perms;

allow system_server gpsd:binder transfer;
type_transition system_server system_data_file:fifo_file gps_data_file ".gps.interface.pipe.to_jni";

# Access .gps.interface.pipe.to_gpsd.
allow system_server gps_data_file:dir rw_dir_perms;
allow system_server gps_data_file:fifo_file { setattr create_file_perms };

# Access /data/sensors/gps* socket
allow system_server gps_data_file:sock_file create_file_perms;
allow system_server gps_data_file:dir rw_dir_perms;
allow system_server gps_data_file:file rw_file_perms;

#allow system_server sensors_data_file:dir r_dir_perms;
#allow system_server sensors_data_file:file rw_file_perms;
#allow system_server sensors_data_file:fifo_file rw_file_perms;

allow system_server sensors_device:chr_file r_file_perms;

